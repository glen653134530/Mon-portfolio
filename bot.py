import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, CallbackQueryHandler, ContextTypes

TOKEN = "YOUR_BOT_TOKEN_HERE"
ADMIN_ID = 8142847766

services = [
    "ğŸ”¹ CrÃ©ation de sites web",
    "ğŸ”¹ DÃ©veloppement dâ€™applications mobiles",
    "ğŸ”¹ Gestion de rÃ©seaux sociaux",
    "ğŸ”¹ Conception dâ€™affiches et visuels pro",
    "ğŸ”¹ Montage vidÃ©o",
    "ğŸ”¹ CrÃ©ation de boutiques e-commerce",
    "ğŸ”¹ RÃ©fÃ©rencement SEO/SEA",
    "ğŸ”¹ Maintenance & sÃ©curitÃ©"
]

descriptions = [
    "Nous concevons des sites web modernes, professionnels et 100% adaptÃ©s Ã  vos besoins.",
    "Nous dÃ©veloppons des applications mobiles performantes et intuitives pour Android et iOS.",
    "Confiez-nous vos pages : nous assurons contenu, animation et croissance des abonnÃ©s.",
    "Des visuels haut de gamme pour booster votre image (affiches, flyers, rÃ©seaux...).",
    "Montage de vidÃ©os de qualitÃ© pro pour vos projets, pubs, teasers ou rÃ©seaux sociaux.",
    "Lancez votre boutique en ligne avec un design pro, panier, paiement et interface admin.",
    "Optimisez votre visibilitÃ© avec un bon positionnement Google (SEO) et des campagnes sponsorisÃ©es (SEA).",
    "Assurez la sÃ©curitÃ©, les mises Ã  jour et le bon fonctionnement de votre site/app."
]

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[InlineKeyboardButton(service, callback_data=str(i))] for i, service in enumerate(services)]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("Bienvenue chez GT Web Studio !

ğŸ’¼ Voici nos services :", reply_markup=reply_markup)

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    index = int(query.data)
    response = f"{services[index]}\n\n{descriptions[index]}"
    await query.edit_message_text(text=response)

async def main():
    application = ApplicationBuilder().token(TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button_handler))
    await application.run_polling()

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
